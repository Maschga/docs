product:
  brand: Volvo
description: |
  Für die Nutzung mit EVCC benötigst du einen Volvo Account und einen Volvo Connected Car API Key.
  Erstelle dazu auf der [Account Seite](https://developer.volvocars.com/account/) eine neue Applikation und speichere den primären VCC API Key ab.
  Veröffentliche nun deine Applikation und wähle unter "Scopes" die Berechtigungen "Connected Vehicle API -> conve:vehicle_relation" und "Energy API -> (alles)" aus.
  Als Redirect URL kannst du erstmal "http://localhost:9999" (oder etwas anderes nicht erreichbares) verwenden. Der Authorisierungscode wird später händisch aus dem Browser gelesen und eingegeben.
  Sobald die Applikation erstellt ist, wird sie als "Publication under Review" angezeigt. Das ist nicht weiter schlimm, es funktioniert trotzdem.
  Erstelle danach einen Token mit `evcc token <auto-name>` und speichere die Tokens in der Konfiguration. Falls Evcc wegen einem invaliden Refresh Token abbricht, lösche die Tokens mit `evcc settings` und generiere sie neu.

render:
  - default: |
      type: template
      template: volvo-connected
      title: # Wird in der Benutzeroberfläche angezeigt (optional)
      capacity: 50 # Akkukapazität in kWh (optional)
      vccapikey: # Volvo developer portal VCC API Key
      clientId: # Client ID deiner [Volvo Developer App](https://developer.volvocars.com/).
      clientSecret: # Client Secret deiner [Volvo Developer App](https://developer.volvocars.com/).
      accessToken:
      refreshToken:
      vin: WF0FXX... # Erforderlich, wenn mehrere Fahrzeuge des Herstellers vorhanden sind (optional)
    advanced: |
      type: template
      template: volvo-connected
      title: # Wird in der Benutzeroberfläche angezeigt (optional)
      capacity: 50 # Akkukapazität in kWh (optional)
      vccapikey: # Volvo developer portal VCC API Key
      clientId: # Client ID deiner [Volvo Developer App](https://developer.volvocars.com/).
      clientSecret: # Client Secret deiner [Volvo Developer App](https://developer.volvocars.com/).
      accessToken:
      refreshToken:
      vin: WF0FXX... # Erforderlich, wenn mehrere Fahrzeuge des Herstellers vorhanden sind (optional)
      icon: car # Icon in der Benutzeroberfläche [car, bike, bus, moped, motorcycle, rocket, scooter, taxi, tractor, rickshaw, shuttle, van, airpurifier, battery, bulb, climate, coffeemaker, compute, cooking, cooler, desktop, device, dishwasher, dryer, floorlamp, generic, heater, heatexchange, heatpump, kettle, laundry, laundry2, machine, meter, microwave, pump, smartconsumer, tool, waterheater] (optional)
      phases: 3 # Die maximale Anzahl der Phasen welche genutzt werden können (optional)
      mode: # Möglich sind Off, Now, MinPV und PV, oder leer wenn keiner definiert werden soll (optional)
      minCurrent: 6 # Definiert die minimale Stromstärke pro angeschlossener Phase mit welcher das Fahrzeug geladen werden soll (optional)
      maxCurrent: 16 # Definiert die maximale Stromstärke pro angeschlossener Phase mit welcher das Fahrzeug geladen werden soll (optional)
      identifiers: # Kann meist erst später eingetragen werden, siehe: https://docs.evcc.io/docs/features/vehicle (optional)
      priority: # Priorität des Ladepunktes oder Fahrzeugs in Relation zu anderen Ladepunkten oder Fahrzeugen für die Zuweisung von PV-Energie (optional)
